#include <iostream>
#include <string>
#include <vector>
using namespace std;
 
 
const int M = 1000000007, p = 31;
int n;
vector < long long > pw;
vector < long long > h;
 
 
inline long long get(int l, int r)
{
    long long hp = ((h[r] - h[l - 1]) * pw[n - r]) % M;
    if (hp < 0)
    {
        return hp + M;
    }
    return hp;
}
 
 
int main()
{
    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
    string s;
 
    cin >> s;
 
    n = s.length();
    pw.resize(n, 1);
    for (int i = 1; i < n; i++)
    {
        pw[i] = (pw[i - 1] * p) % M;
    }
 
    h.resize(n + 1, 0);
    for (int i = 1; i <= n; i++)
    {
        h[i] = ((s[i - 1] - 'a' + 1) * pw[i - 1] + h[i - 1]) % M;
    }
 
    int m;
    cin >> m;
 
    int a, b, c, d;
    for (int i = 0; i < m; i++)
    {
        cin >> a >> b >> c >> d;
        if (get(a, b) == get(c, d))
        {
            cout << "Yes\n";
        }
        else
        {
            cout << "No\n";
        }
    }
 
    return 0;
}