#include <algorithm>
#include <iostream>
#include <string>
#include <vector>
using namespace std;
 
 
const int M = 1000000007, p = 31;
int n;
vector < long long > pw;
vector < long long > h;
 
 
inline long long get(int l, int r)
{
    long long hp = ((h[r] - h[l - 1]) * pw[n - r]) % M;
    if (hp < 0)
    {
        return hp + M;
    }
    return hp;
}
 
 
int main()
{
    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
    string s;
 
    cin >> s;
 
    n = s.length();
    pw.resize(n, 1);
    for (int i = 1; i < n; i++)
    {
        pw[i] = (pw[i - 1] * p) % M;
    }
 
    h.resize(n + 1, 0);
    for (int i = 1; i <= n; i++)
    {
        h[i] = ((s[i - 1] - 'a' + 1) * pw[i - 1] + h[i - 1]) % M;
    }
 
    int q;
    cin >> q;
 
    int l1, r1, l2, r2;
    for (int i = 0; i < q; i++)
    {
        cin >> l1 >> r1 >> l2 >> r2;
        if (s[l1 - 1] != s[l2 - 1])
        {
            if (s[l1 - 1] > s[l2 - 1])
            {
                cout << ">" << endl;
            }
            else
            {
                cout << "<" << endl;
            }
        }
        else
        {
            int l = 0, r = min(r1 - l1, r2 - l2) + 1;
            while (r - l > 1)
            {
                int md = (l + r) / 2;
 
                if (get(l1, l1 + md) == get(l2, l2 + md))
                {
                    l = md;
                }
                else
                {
                    r = md;
                }
            }
            if (l == min(r1 - l1, r2 - l2))
            {
                if (r1 - l1 > r2 - l2)
                {
                    cout << ">" << endl;
                }
                else if (r1 - l1 < r2 - l2)
                {
                    cout << "<" << endl;
                }
                else
                {
                    cout << "=" << endl;
                }
            }
            else
            {
                if (s[l1 + r - 1] > s[l2 + r - 1])
                {
                    cout << ">" << endl;
                }
                else
                {
                    cout << "<" << endl;
                }
            }
        }
    }
 
    return 0;
}