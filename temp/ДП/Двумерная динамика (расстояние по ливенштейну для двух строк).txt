#include <iostream>
#include <algorithm>
#include <string>
#include <vector>
using namespace std;
 
 
int main()
{
    ios_base::sync_with_stdio(false);
    string s1, s2;
 
    cin >> s1;
    cin >> s2;
 
    int n = s1.length(), m = s2.length();
    vector < vector < int > > dp(n + 1);
    for (int i = 0; i <= n; i++)
    {
        dp[i].resize(m + 1);
        if (i == 0)
        {
            for (int j = 0; j <= m; j++)
            {
                dp[i][j] = j;
            }
        }
        dp[i][0] = i;
    }
    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= m; j++)
        {
            if (s1[i - 1] == s2[j - 1])
            {
                dp[i][j] = dp[i - 1][j - 1];
            }
            else
            {
                dp[i][j] = min(min(dp[i - 1][j], dp[i][j - 1]), dp[i - 1][j - 1]) + 1;
            }
        }
    }
 
    cout << dp[n][m] << endl;
 
    return 0;
}