#include <algorithm>
#include <iostream>
#include <vector>
#include <set>
using namespace std;
 
 
int main()
{
    int n, m = 0;
    
    cin >> n;
 
    vector < int > w(n);
    for (int i = 0; i < n; i++)
    {
        cin >> w[i];
        m += w[i];
    }
 
    if (n % 2 == 1 || m % 2 == 1)
    {
        cout << -1 << endl;
        return 0;
    }
 
    vector < vector < set < int > > > dp(n + 1);
    for (int i = 0; i <= n; i++)
    {
        dp[i].resize(m / 2 + 1);
    }
 
    dp[0][0].insert(0);
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j <= m / 2; j++)
        {
            for (set < int > ::iterator it = dp[i - 1][j].begin(); it != dp[i - 1][j].end(); it++)
            {
                dp[i][j].insert(*it);
            }
            if (j - w[i - 1] >= 0)
            {
                for (set < int > ::iterator it = dp[i - 1][j - w[i - 1]].begin(); it != dp[i - 1][j - w[i - 1]].end(); it++)
                {
                    dp[i][j].insert(*it + 1);
                }
            }
        }
    }
 
    int k = 0;
    for (set < int > ::iterator it = dp[n][m / 2].begin(); it != dp[n][m / 2].end(); it++)
    {
        if (*it == n / 2)
        {
            k = n / 2;
        }
    }
 
    if (k == 0)
    {
        cout << -1 << endl;
        return 0;
    }
 
    int i = n, j = m / 2;
    vector < int > ans;
    while (i > 0 && j >= 0)
    {
        set < int > ::iterator it = dp[i - 1][j].lower_bound(k);
 
        if (it != dp[i - 1][j].end() && *it == k)
        {
            i--;
            continue;
        }
 
        if (j - w[i - 1] >= 0)
        {
            it = dp[i - 1][j - w[i - 1]].lower_bound(k - 1);
 
            if (it != dp[i - 1][j - w[i - 1]].end() && *it == k - 1)
            {
                ans.push_back(i);
                k--;
                j -= w[i - 1];
                i--;
            }
        }
        else
        {
            break;
        }
    }
 
    vector < bool > f(n, true);
    for (i = ans.size() - 1; i >= 0; i--)
    {
        cout << ans[i] << " ";
        f[ans[i] - 1] = false;
    }
    cout << endl;
    for (i = 0; i < n; i++)
    {
        if (f[i])
        {
            cout << i + 1 << " ";
        }
    }
    cout << endl;
 
    return 0;
}