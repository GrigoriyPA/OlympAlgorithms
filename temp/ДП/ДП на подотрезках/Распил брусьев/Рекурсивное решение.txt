#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
using namespace std;
 
 
vector < vector < int > > dp;
vector < int > c;
 
 
int cut(int l, int r)
{
    if (dp[l][r] > 0)
    {
        return dp[l][r];
    }
 
    int res = c[r] - c[l], mn = 0;
 
    for (int i = l + 1; i < r; i++)
    {
        int nw = cut(l, i) + cut(i, r);
        if (mn == 0 || nw < mn)
        {
            mn = nw;
        }
    }
 
    res += mn;
 
    dp[l][r] = res;
 
    return res;
}
 
 
int main()
{
    ios_base::sync_with_stdio(false);
    int l, n, coord;
 
    cin >> l >> n;
 
    c.resize(n + 2);
    c[0] = 0;
    for (int i = 0; i < n; i++)
    {
        cin >> c[i + 1];
    }
    c[c.size() - 1] = l;
 
    dp.resize(n + 2);
    for (int i = 0; i < n + 2; i++)
    {
        dp[i].resize(n + 2, 0);
    }
 
    cout << cut(0, c.size() - 1) - l << endl;
 
    return 0;
}