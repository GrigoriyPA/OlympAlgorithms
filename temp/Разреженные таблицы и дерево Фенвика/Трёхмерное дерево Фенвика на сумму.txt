#include <iostream>
#include <string>
#include <vector>
#include <set>
using namespace std;
 
 
vector < vector < vector < long long > > > t;
 
 
long long pref_sum(int x, int y, int z)
{
    long long res = 0;
    for (int i = x; i >= 0; i = (i & (i + 1)) - 1)
    {
        for (int j = y; j >= 0; j = (j & (j + 1)) - 1)
        {
            for (int k = z; k >= 0; k = (k & (k + 1)) - 1)
            {
                res += t[i][j][k];
            }
        }
    }
    return res;
}
 
 
void change(int x, int y, int z, int add)
{
    for (int i = x; i < t.size(); i = (i | (i + 1)))
    {
        for (int j = y; j < t[i].size(); j = (j | (j + 1)))
        {
            for (int k = z; k < t[i][j].size(); k = (k | (k + 1)))
            {
                t[i][j][k] += add;
            }
        }
    }
}
 
 
long long get_sum(int x1, int y1, int z1, int x2, int y2, int z2)
{
    return pref_sum(x2, y2, z2) - pref_sum(x2, y1, z2) + (-pref_sum(x2, y2, z1) + pref_sum(x2, y1, z1)) + (-pref_sum(x1, y2, z2) + pref_sum(x1, y1, z2)) + (pref_sum(x1, y2, z1) - pref_sum(x1, y1, z1));
}
 
 
int main()
{
    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
    int n, m;
 
    cin >> n;
 
    t.resize(n + 1);
    for (int i = 0; i <= n; i++)
    {
        t[i].resize(n + 1);
        for (int j = 0; j <= n; j++)
        {
            t[i][j].resize(n + 1, 0);
        }
    }
 
    cin >> m;
 
    int x, y, z, xa, ya, za, k;
    while (m != 3)
    {
        if (m == 1)
        {
            cin >> x >> y >> z >> k;
            change(x, y, z, k);
        }
        else
        {
            cin >> x >> y >> z >> xa >> ya >> za;
            cout << get_sum(x - 1, y - 1, z - 1, xa, ya, za) << endl;
        }
        cin >> m;
    }
 
    return 0;
}